display board

Enter block, position, number 

validations / turn 
    - is each 1-9
    - is it correct entry, compare against solution
        yes: enter and next turn
        no: sorry, please try again, loop 
    - update running string to include new move 
    - clear terminal and display updated board 

Loop until entry/game == solution 
    - triggers end_time
    - triggers "congrats"

    .........................................

# def input_valid? #is block, position, number #1-9
# end 

# def input_to_index #turns input to an index
# end 

# def position_taken? #makes sure block/position not already filled out
# end 

# def correct_entry? #number[index] = solution[index]
# end 

# def valid_move? #
#     #takes helper methods input_validation and position_taken and correct entry
# end 

def move(board, user_input) #update string with number @ position; push into string 
    self.board.puzzle[input_to_index] = user_input[2] 
    return self.board.puzzle
end 

def updated_display_board #clear terminal and display updated board 
    system('cls') #code to clear terminal?
    display_board 
end 

user_input = get_input 

def get_input
    user_input = [] 
    puts "Please enter a number (1-9) for the block:"
    user_input << gets.chomp 
    puts "Please enter a number (1-9) for the position:"
    user_input << gets.chomp
    puts "Please enter a number (1-9) for the value you would like to enter:"
    user_input << gets.chomp
    user_input
end 

def turn(board) 
    user_input = get_input 
    index = input_to_index(user_input)
    if valid_move?(board, index) #verify arguments with Tom
        move() #arguments
        updated_display_board 
    else 
        turn 
    end 
end 

def won?
    self.board.puzzle == self.board.solution 
end 

# gem install time_diff
# require 'time_diff'
def total_time(start_time, end_time)
    total_time = Time.diff(Time.parse(start_time), Time.parse(end_time), '%H %N %S')
    total_time[:diff]
end

def play
    start_time = Time.now #fix timer method
    turn until won?
    puts "Congrats, you ROCK!!!"
    end_time = Time.now #(.strftime("%H:%M:%S"))
    time = total_time(start_time, end_time)
    puts "You completed this puzzle in #{time}!"
end 

 
 

